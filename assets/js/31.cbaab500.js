(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{477:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-service-设计理念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-service-设计理念"}},[t._v("#")]),t._v(" 1.Service 设计理念")]),t._v(" "),a("blockquote",[a("p",[t._v("​\t\tservice这个概念存在的意义重要，首先由于重新调度等原因，pod在kubernetes中的ip地址不是固定的，因此需要一个代理来确保需要使用的pod的应用不需要知晓pod的真实IP地址。还有一个原因是当使用replication controller创建了多个pod的副本时，需要一个代理来为这些pod做负载均衡。service这个名称的含义其实挺能引起误解的，或许改为proxy或者router更为贴切。")]),t._v(" "),a("p",[t._v("​\t\tservice主要由一个IP地址和一个label selector组成。在创建之初，每个service便被分配了一个独一无二的IP地址，该IP地址与serivce的生命周期相同且不再更改(pod IP地址与此不同，会随着pod的生命周期产生和消亡)。")])]),t._v(" "),a("h2",{attrs:{id:"_2-nginx-deployment-创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-nginx-deployment-创建"}},[t._v("#")]),t._v(" 2.nginx-deployment 创建")]),t._v(" "),a("p",[t._v("因为service只是用来负责代理和转发的，所以这边需要先定义一个转发对象。")]),t._v(" "),a("h3",{attrs:{id:"定义nginx-deployment-yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义nginx-deployment-yaml"}},[t._v("#")]),t._v(" 定义nginx-deployment.yaml")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.9.0前使用 apps/v1beta2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 副本数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.7.9\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),a("h3",{attrs:{id:"部署nginx-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署nginx-deployment"}},[t._v("#")]),t._v(" 部署nginx-deployment")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" nginx-deployment.yaml\n")])])]),a("h2",{attrs:{id:"_3-nginx-service-创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-nginx-service-创建"}},[t._v("#")]),t._v(" 3.nginx-service 创建")]),t._v(" "),a("p",[t._v("service 通常分为3种类型，分别为ClusterIP，NodePort和LoadBalancer。其中ClusterIP是最基本的类型，即在默认情况下只能在集群内部进行访问；另外两种则与实现从集群外部路由有着密不可分的联系。")]),t._v(" "),a("h3",{attrs:{id:"clusterip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clusterip"}},[t._v("#")]),t._v(" ClusterIP")]),t._v(" "),a("p",[t._v("集群内部IP，只供内部集群调用")]),t._v(" "),a("p",[t._v("可以通过访问 service名称.命名空间(同命名空间可参略):servicePort")]),t._v(" "),a("p",[t._v("示例："),a("code",[t._v("nginx-service.my-namespace:8080")])]),t._v(" "),a("h4",{attrs:{id:"定义nginx-service-yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义nginx-service-yaml"}},[t._v("#")]),t._v(" 定义nginx-service.yaml")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标签选择器，通过标签匹配关联的pod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定service端口")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器端口，转发到对应Pod容器端口")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service使用协议 默认TCP")]),t._v("\n")])])]),a("h4",{attrs:{id:"部署nginx-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署nginx-service"}},[t._v("#")]),t._v(" 部署nginx-service")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" nginx-service.yaml\n")])])]),a("h3",{attrs:{id:"nodeport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodeport"}},[t._v("#")]),t._v(" NodePort")]),t._v(" "),a("p",[t._v("集群内部IP，对外开放可直接访问")]),t._v(" "),a("p",[t._v("可以通过访问 集群NodeIP:serviceNodePort")]),t._v(" "),a("p",[t._v("示例："),a("code",[t._v("192.168.199.151:30080")])]),t._v(" "),a("h4",{attrs:{id:"定义nginx-nodeport-service-yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义nginx-nodeport-service-yaml"}},[t._v("#")]),t._v(" 定义nginx-nodeport-service.yaml")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nodeport\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePort\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标签选择器，通过标签匹配关联的pod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转发到机器内部service端口")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 节点端口")]),t._v("\n")])])]),a("h4",{attrs:{id:"部署nginx-nodeport-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署nginx-nodeport-service"}},[t._v("#")]),t._v(" 部署nginx-nodeport-service")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" nginx-nodeport-service.yaml\n")])])]),a("h3",{attrs:{id:"查看service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看service"}},[t._v("#")]),t._v(" 查看service")]),t._v(" "),a("p",[t._v("前面部署的yaml时没有指明是部署到那个命名空间中的，所以默认部署到了default中，查询的时候可以直接不写命名空间")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" \n")])])]),a("p",[t._v("如果指定了部署的命名空间")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" my-namespace\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);
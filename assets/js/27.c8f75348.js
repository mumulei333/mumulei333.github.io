(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{473:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"环境配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境配置"}},[t._v("#")]),t._v(" 环境配置")]),t._v(" "),s("h4",{attrs:{id:"安装docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[t._v("#")]),t._v(" 安装docker")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo apt update\nsudo apt install docker.io -y\n")])])]),s("h4",{attrs:{id:"安装docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-compose"}},[t._v("#")]),t._v(" 安装docker-compose")]),t._v(" "),s("p",[t._v("下载")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("curl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("L "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://github.com/docker/compose/releases/download/1.26.0-rc4/docker-compose-Linux-x86_64"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr/local/bin/docker-compose\n")])])]),s("p",[t._v("赋权")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/docker-compose\n")])])]),s("p",[t._v("查看版本，验证是否安装成功")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("\n")])])]),s("h4",{attrs:{id:"配置证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置证书"}},[t._v("#")]),t._v(" 配置证书")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("生成自签名证书")])]),t._v(" "),s("p",[t._v("可查看\n"),s("a",{attrs:{href:"https://mumulei.com/2020/09/09/openssl%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openssl生成自签名证书"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意")]),t._v("：这种方式生成的自签名的证书，如果需要访问的话需要在本机上配置，例如安装完后想使用浏览器去访问harbor的视图界面，那么需要在访问的机器上进行配置(过于麻烦这里就不详讲QAQ)，否则会出现不安全访问，如果浏览器是使用的谷歌那么是访问不了的，如果你不想配置但是又想访问那么你可以选择火狐浏览器，如果既想使用谷歌浏览器访问又不想配置，那么你可以使用下面那种方式配置证书。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("上传域名证书(推荐)")])]),t._v(" "),s("p",[t._v("氪金大法好")]),t._v(" "),s("p",[t._v("在某云平台购买域名，配置域名的DNS，添加一条A纪录指向该台服务器IP；并且购买域名SSL证书并绑定域名，证书申请成功后将证书下载，下载pem格式的证书将其后缀名改成crt文件最后上传服务器即可")])])]),t._v(" "),s("h3",{attrs:{id:"安装harbor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装harbor"}},[t._v("#")]),t._v(" 安装harbor")]),t._v(" "),s("h4",{attrs:{id:"下载离线包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载离线包"}},[t._v("#")]),t._v(" 下载离线包")]),t._v(" "),s("p",[t._v("下载harbor离线包 https://github.com/goharbor/harbor/releases")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("wget https://github.com/goharbor/harbor/releases/download/v2.0.0/harbor-offline-installer-v2.0.0.tgz\n")])])]),s("p",[t._v("解压")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("tar zxf harbor-offline-installer-v2.0.0.tgz -C /data\n")])])]),s("h4",{attrs:{id:"准备配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备配置文件"}},[t._v("#")]),t._v(" 准备配置文件")]),t._v(" "),s("p",[s("code",[t._v("harbor")]),t._v("是harbor-offline-installer-v2.0.0.tgz解压后的文件")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd /data/harbor\ncp harbor.yml.tmpl harbor.yml\n")])])]),s("p",[t._v("配置关键信息，主要修改IP、证书、管理员UI登录的密码、data数据目录")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configuration file of Harbor")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The IP address or hostname to access admin UI and registry service.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hostname设置访问地址，可以使用ip、域名，不可以设置为127.0.0.1或localhost")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.199.160\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http related config")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# port for http, default is 80. If https enabled, this port will redirect to https port")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https related config")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("https")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https port for harbor, default is 443")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 证书路径")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("certificate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /data/cert/server.crt\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("private_key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /data/cert/server.key\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Uncomment following will enable tls communication between all harbor components")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# internal_tls:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # set enabled to true means internal tls is enabled")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   enabled: true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # put your cert and key files on dir")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   dir: /etc/harbor/tls/internal")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment external_url if you want to enable external proxy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# And when it enabled the hostname will no longer used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_url: https://reg.mydomain.com:8433")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The initial password of Harbor admin")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It only works in first time to install harbor")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动Harbor后，管理员UI登录的密码，默认是Harbor12345")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("harbor_admin_password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mumu282828\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Harbor DB configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("database")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The password for the root user of Harbor DB. Change this before any production use.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root123\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max_idle_conns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note: the default number of connections is 100 for postgres.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max_open_conns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数据存储路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data_volume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /data/harbor/data\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Harbor Storage settings by default is using /data dir on local filesystem")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment storage_service setting If you want to using external storage")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# storage_service:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ca_bundle:")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   filesystem:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     maxthreads: 100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # set disable to true when you want to disable registry redirect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   redirect:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     disabled: false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clair configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("updaters_interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Trivy configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("trivy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ignoreUnfixed The flag to display only fixed vulnerabilities")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ignore_unfixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# skipUpdate The flag to enable or disable Trivy DB downloads from GitHub")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the flag is enabled you have to manually download the `trivy.db` file and mount it in the")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /home/scanner/.cache/trivy/db/trivy.db path.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skip_update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# insecure The flag to skip verifying registry certificate")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("insecure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# github_token The GitHub access token to download Trivy DB")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Trivy DB contains vulnerability information from NVD, Red Hat, and many other upstream vulnerability databases.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It is downloaded by Trivy from the GitHub release page https://github.com/aquasecurity/trivy-db/releases and cached")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in the local file system (/home/scanner/.cache/trivy/db/trivy.db). In addition, the database contains the update")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# timestamp so Trivy can detect whether it should download a newer version from the Internet or use the cached one.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Currently, the database is updated every 12 hours and published as a new release to GitHub.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://developer.github.com/v3/#rate-limiting")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can create a GitHub token by following the instuctions in")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# github_token: xxx")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobservice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of job workers in job service")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max_job_workers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notification")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum retry count for webhook job")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhook_job_max_retry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("chart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Change the value of absolute_url to enabled can enable absolute url in chart")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("absolute_url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" disabled\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log configurations")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# options are debug, info, warning, error, fatal")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" info\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configs for logs in local storage")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rotate_count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# are all valid.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rotate_size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200M\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The directory on your host that store log")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log/harbor\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment following lines to enable external syslog endpoint.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_endpoint:")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # protocol used to transmit log to external endpoint, options is tcp or udp")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   protocol: tcp")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # The host of external endpoint")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   host: localhost")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Port of external endpoint")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   port: 5140")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("_version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2.0.0\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment external_database if using external database.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_database:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   harbor:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: harbor_db_host")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: harbor_db_port")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: harbor_db_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: harbor_db_username")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: harbor_db_password")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     max_idle_conns: 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     max_open_conns: 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   clair:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: clair_db_host")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: clair_db_port")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: clair_db_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: clair_db_username")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: clair_db_password")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   notary_signer:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: notary_signer_db_host")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: notary_signer_db_port")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: notary_signer_db_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: notary_signer_db_username")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: notary_signer_db_password")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   notary_server:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: notary_server_db_host")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: notary_server_db_port")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: notary_server_db_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: notary_server_db_username")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: notary_server_db_password")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment external_redis if using external Redis server")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_redis:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   host: redis")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   port: 6379")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   password:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # db_index 0 is for core, it's unchangeable")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   registry_db_index: 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   jobservice_db_index: 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   chartmuseum_db_index: 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   clair_db_index: 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   trivy_db_index: 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   idle_timeout_seconds: 30")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uaa:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ca_file: /path/to/ca")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Global proxy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Config http proxy for components, e.g. http://my.proxy.com:3128")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Components doesn't need to connect to each others via http proxy.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove component from `components` array if want disable proxy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for it. If you want use proxy for replication, MUST enable proxy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for core and jobservice, and set `http_proxy` and `https_proxy`.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add domain to the `no_proxy` field, when you want disable proxy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for some special registry.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http_proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("https_proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("no_proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" core\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" jobservice\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" clair\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" trivy\n")])])]),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("配置文件后，查看同路径下有一个"),s("code",[t._v("install.sh")]),t._v("文件，执行该文件即可安装")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./install.sh\n")])])]),s("h3",{attrs:{id:"客户端使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端使用"}},[t._v("#")]),t._v(" 客户端使用")]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：如果是自签名的证书那么客户端服务器需要配置以下")]),t._v(" "),s("p",[s("code",[t._v("192.168.199.160")]),t._v("自签名的服务器IP")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mkdir -p /etc/docker/certs.d/192.168.199.160\n")])])]),s("p",[t._v("将自签名生成的证书文件"),s("code",[t._v("server.crt")]),t._v("上传至客户端服务器的该路径")]),t._v(" "),s("h4",{attrs:{id:"验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),s("p",[t._v("在客户端服务器上登入仓库")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" admin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" mumu282828 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.160\n")])])]),s("h3",{attrs:{id:"运维"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运维"}},[t._v("#")]),t._v(" 运维")]),t._v(" "),s("h4",{attrs:{id:"启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd /data/harbor\ndocker-compose up -d\n")])])]),s("p",[t._v("或者")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd /data/harbor\n./install.sh\n")])])]),s("h4",{attrs:{id:"关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭"}},[t._v("#")]),t._v(" 关闭")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd /data/harbor\ndocker-compose down -v\n")])])]),s("h4",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("goharbor/nginx-photon:v2.0.0 启动失败")]),t._v(" "),s("p",[t._v("查看"),s("code",[t._v("harbor.yml")]),t._v("文件的证书路径是否配置正确")])]),t._v(" "),s("li",[s("p",[t._v("sudo docker push 推镜像访问资源权限不够")]),t._v(" "),s("p",[t._v("查看推送的仓库路径项目是否已经创建，如果没有的话可以使用浏览器登入到harbor创建")])]),t._v(" "),s("li",[s("p",[t._v("sudo docker pull 镜像拉取失败")]),t._v(" "),s("ol",[s("li",[t._v("使用docker login 验证一下该台服务器是否可以登入到仓库")]),t._v(" "),s("li",[t._v("登入到harbor查看该镜像是否存在")]),t._v(" "),s("li",[t._v("查看仓库项目的访问级别是否为开放")])])])]),t._v(" "),s("h3",{attrs:{id:"感谢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#感谢"}},[t._v("#")]),t._v(" 感谢")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://jdkhome.github.io/pages/d9266c/",target:"_blank",rel:"noopener noreferrer"}},[t._v("harbor搭建"),s("OutboundLink")],1),t._v(" jdkhome")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/qq_40378034/article/details/90752212",target:"_blank",rel:"noopener noreferrer"}},[t._v("Harbor仓库搭建及简单使用"),s("OutboundLink")],1),t._v(" 邋遢的流浪剑客")])])])}),[],!1,null,null,null);s.default=n.exports}}]);
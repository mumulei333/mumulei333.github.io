(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{472:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"数据库服务搭建容器化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库服务搭建容器化"}},[a._v("#")]),a._v(" 数据库服务搭建容器化")]),a._v(" "),s("h3",{attrs:{id:"mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[a._v("#")]),a._v(" mysql")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mysql "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3306")]),a._v(":3306 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /data/mysql:/var/lib/mysql "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("xxxxxx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nmysql:5.7\n")])])]),s("p",[s("strong",[a._v("-v 文件挂载")]),a._v("：将mysql的"),s("code",[a._v("/var/lib/mysql")]),a._v("路径下的数据文件挂载至宿主机上的"),s("code",[a._v("/data/mysql")]),a._v("路径下")]),a._v(" "),s("p",[s("strong",[a._v("-e 环境变量")]),a._v("：设置mysql中的环境参数"),s("code",[a._v("MYSQL_ROOT_PASSWORD")]),a._v("设置root账号的初始密码")]),a._v(" "),s("h3",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" redis")]),a._v(" "),s("h4",{attrs:{id:"准备redis-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备redis-conf"}},[a._v("#")]),a._v(" 准备redis.conf")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 密码\nrequirepass xxxxxx\n# 指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，\nmaxmemory 1024m\n# 绑定的主机地址，你可以绑定单一接口(127.0.0.1只允许本机连接)，如果没有绑定(开放ip)，所有接口都会监听到来的连接\n# bind 127.0.0.1\n# 主从复制，只需要从节点配置即可\n# slaveof &lt;masterip> &lt;masterport>\n")])])]),s("h4",{attrs:{id:"启动redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动redis"}},[a._v("#")]),a._v(" 启动redis")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" redis "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6379")]),a._v(":6379 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /data/redis/data:/data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /data/redis/redis.conf:/usr/local/etc/redis/redis.conf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nredis:4.0.8\n")])])]),s("p",[s("strong",[a._v("-v1 文件挂载")]),a._v("：将redis的"),s("code",[a._v("/data")]),a._v("路径下的数据文件挂载至宿主机上的"),s("code",[a._v("/data/redis/data")]),a._v("路径下")]),a._v(" "),s("p",[s("strong",[a._v("-v2 文件挂载")]),a._v("：将redis的"),s("code",[a._v("/usr/local/etc/redis/redis.conf")]),a._v("路径下的redis配置文件挂载至宿主机上的"),s("code",[a._v("/data/redis/redis.conf")]),a._v("路径下，当然也可以在宿主机上先配置好redis.conf然后再覆盖容器里的redis.conf")]),a._v(" "),s("h3",{attrs:{id:"mongo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongo"}},[a._v("#")]),a._v(" mongo")]),a._v(" "),s("h4",{attrs:{id:"启动mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动mongodb"}},[a._v("#")]),a._v(" 启动mongodb")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mongodb "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("27017")]),a._v(":27017 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /data/mongodb:/data/db "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nmongo\n")])])]),s("p",[s("strong",[a._v("-v 文件挂载")]),a._v("：将redis的"),s("code",[a._v("/data/db")]),a._v("路径下的数据文件挂载至宿主机上的"),s("code",[a._v("/data/mongodb")]),a._v("路径下")]),a._v(" "),s("h4",{attrs:{id:"配置mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置mongodb"}},[a._v("#")]),a._v(" 配置mongodb")]),a._v(" "),s("h5",{attrs:{id:"进入docker容器的mongo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入docker容器的mongo"}},[a._v("#")]),a._v(" 进入docker容器的mongo")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" mongodb mongo\n")])])]),s("h5",{attrs:{id:"配置用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置用户"}},[a._v("#")]),a._v(" 配置用户")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" show dbs   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示所有数据库")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" use admin  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入admin数据库")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" db.createUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    user: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"admin"')]),a._v(",\n    pwd: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"abc123"')]),a._v(",\n    roles: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" role: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"userAdminAnyDatabase"')]),a._v(", db: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"admin"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建一个用户，身份是超级管理员")]),a._v("\n")])])]),s("p",[a._v("完成后会提示Successfully added user相关信息")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" db.auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"admin"')]),a._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"abc123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),s("p",[a._v("若返回为1，则认证成功！现在，我们超级管理员也创建好了，可以为其他数据库创建用户了")]),a._v(" "),s("h5",{attrs:{id:"mongodb基本的角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb基本的角色"}},[a._v("#")]),a._v(" MongoDB基本的角色")]),a._v(" "),s("p",[a._v("1."),s("strong",[a._v("数据库用户角色")]),a._v("：read、readWrite;\n2."),s("strong",[a._v("数据库管理角色")]),a._v("：dbAdmin、dbOwner、userAdmin；\n3."),s("strong",[a._v("集群管理角色")]),a._v("：clusterAdmin、clusterManager、clusterMonitor、hostManager；\n4."),s("strong",[a._v("备份恢复角色")]),a._v("：backup、restore；\n5."),s("strong",[a._v("所有数据库角色")]),a._v("：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase\n6."),s("strong",[a._v("超级用户角色")]),a._v("：root还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）")]),a._v(" "),s("p",[a._v("其中MongoDB默认是没有开启用户认证的，也就是说游客也拥有超级管理员的权限。userAdminAnyDatabase：有分配角色和用户的权限，但没有查写的权限")])])}),[],!1,null,null,null);s.default=r.exports}}]);